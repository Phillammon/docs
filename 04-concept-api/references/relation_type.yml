methods:
  - method:
    common: &method-create
      title: Create instance
      description: Creates and returns an instance of this RelationType.
    java:
      <<: *method-create
      method: relationType.create();
      returns:
        - "[`Relation`](../concept-api/thing?tab=java#relation-methods) object"
    javascript:
      <<: *method-create
      method: await relationType.create();
      returns:
        - "[`Relation`](../concept-api/thing?tab=nodejs#relation-methods) object"
    python:
      <<: *method-create
      method: relation_type.create()
      returns:
        - "[`Relation`](../concept-api/thing?tab=python#relation-methods) object"

          - method:
            common: &method-getrelates
              title: Retrieve roles
              description: Retrieve roles that this RelationType relates to.
            java:
              <<: *method-getrelates
              method: relationType.getRelates();
              returns:
                - "[Stream](../client-api/nodejs#stream) of [`RoleType`](../concept-api/type?javatab=#role-type-methods) objects"
            javascript:
              <<: *method-getrelates
              method: relationType.getRelates();
              returns:
                - "[Stream](../client-api/nodejs#stream) of [`RoleType`](../concept-api/type?javascripttab=#role-type-methods) objects"
            python:
              <<: *method-getrelates
              method: relation_type.get_relates()
              returns:
                - "Iterator of [`RoleType`](../concept-api/type?tab=python#role-type-methods) objects"```


  - method:
    common: &method-getrelates-label
      title: Retrieve specific role
      description: Retrieve the role that this RelationType relates to, if extant, with the specified label.
      accepts:
        param:
          name: label
          description: Label of the role we wish to retrieve.
          type: String
          required: true
    java:
      <<: *method-getrelates-label
      method: relationType.getRelates(String label);
      returns:
        - "[`RoleType`](../concept-api/type?javatab=#role-type-methods)"
    javascript:
      <<: *method-getrelates-label
      method: await relationType.getRelates(label);
      returns:
        - "[`RoleType`](../concept-api/type?javascripttab=#role-type-methods)"
    python:
      <<: *method-getrelates-label
      method: relation_type.get_relates(label)
      returns:
        - "[`RoleType`](../concept-api/type?tab=python#role-type-methods)"

  - method:
    common: &method-relates
      title: Set new role
      description: Sets the new role that this RelationType relates to.
      accepts:
        param:
          name: role
          description: The new role for the RelationType to relate to.
          type: RoleType
          required: true
          default: N/A
    java:
      <<: *method-relates
      method: relationType.setRelates(RoleType role);
      returns:
        - void
    javascript:
      <<: *method-relates
      method: await relationType.setRelates(role);
      returns:
        - void
    python:
      <<: *method-relates
      method: relation_type.set_relates(role)
      returns:
        - None

  - method:
    common: &method-unrelate
      title: Remove role
      description: Disallows this RelationType from relating to the given role.
      accepts:
        param:
          name: role
          description: The role to not relate to the relation type.
          type: RoleType
          required: true
          default: N/A
    java:
      <<: *method-unrelate
      method: relationType.unsetRelates(RoleType role);
      returns:
        - void
    javascript:
      <<: *method-unrelate
      method: await relationType.unsetRelates(role);
      returns:
        - void
    python:
      <<: *method-unrelate
      method: relation_type.unset_relates(role)
      returns:
        - None